@using Microsoft.AspNetCore.Identity
@using UrbanDuck.Interfaces
@model Listing
@inject SignInManager<User> signInManager;
@inject UserManager<User> userManager;
@inject IContributorService contributorService;
@inject IBaseService<Booking> bookingService;
@{
    var imgPath = "~/images/" + (Model.photoPath ?? "noimage.jpg");
    <img class="card-img-top" src="@imgPath" asp-append-version="true" />
    <h1>@Model.Title</h1>
    <h1>@Model.Amount</h1>
    <h1>@Model.Description</h1>
    <hr/>

    if (signInManager.IsSignedIn(User))
    {
        if (contributorService.GetByConditions(c => c.UserId == int.Parse(userManager.GetUserId(User))).Result.FirstOrDefault() != null &&
        (await contributorService.GetByUserId(int.Parse(userManager.GetUserId(User)))).Id == @Model.ContributorId)
        {
            <a asp-controller="Listing" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
            <form asp-controller="Listing" asp-action="Delete" asp-route-id="@Model.Id" method="post">
                <button type="submit">Delete</button>
            </form>
            <a asp-controller="Listing" asp-action="AddPhoto" asp-route-id="@Model.Id">Add Photo</a>
        }
        else if ((await bookingService.GetByConditions(b => b.UserId == int.Parse(userManager.GetUserId(User)))).Count()<1)
        {
            <form asp-controller="Booking" asp-action="Create" asp-route-userId=@int.Parse(userManager.GetUserId(User)) asp-route-listingId=@Model.Id method="post">
                <button type="submit">Book Listing</button>      
            </form>
        }
        else
        {
            <form asp-controller="Booking" asp-action="Delete" asp-route-id="@((await bookingService.GetByConditions(b => b.ListingId == Model.Id)).FirstOrDefault().Id)" method="post">
                <button type="submit">Delete Booking</button>
            </form>
        }
    }
}
